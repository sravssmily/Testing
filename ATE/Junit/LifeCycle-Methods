Package.com.phase2.Junit;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestInstance;

@TestInstance(TestInstance.Lifecycle.PER_CLASS)
public class BeforeAfterAllAnnoatation {
	
	static JavaOperations obj ;
	
	@BeforeAll
	public void init()
	{
		System.out.println("Start the DB");
		obj = new JavaOperations();
		 System.out.println("Initalization done..");
	}
	
	@AfterAll
	public void teardown()
	{
		System.out.println("stop the DB");
	}
	
	
	@Test
	public void method1()
	{
		System.out.println("Executing method 1 of code class");
	}
	
	@Test
	public void method2()
	{
		System.out.println("Executing method 2 of code class");
	}

}
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class BeforeAfterEachAnnoatation {
	
	// @BeforeEach & @AfterEach are similar to TestNG @BeforeMethod @AfterMethod
	
	JavaOperations obj;
	
	@BeforeEach  // execute the init() method before each test method
	public void init() {   // pre condition method
		System.out.println("Start Db connection");
		 obj = new JavaOperations();
		 System.out.println("Initalization done..");
	}
	
	
	@AfterEach // execute teardown() method after each test method
	public void teardown()  // post condition method
	{
		System.out.println("close DB connection");
	}
	
	@Test
	public void test1()
	{
		// create an object of a class and then execute the code
		System.out.println("Execute the test case using methods of ... JavaOperations");
		
	}
	
	@Test
	public void test2()
	{
		// create an object of a class and then execute the code
		System.out.println("Execute the test case using methods of ... JavaOperations");
		
	}

}
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class BeforeAfterEachAnnoatation {
	
	// @BeforeEach & @AfterEach are similar to TestNG @BeforeMethod @AfterMethod
	
	JavaOperations obj;
	
	@BeforeEach  // execute the init() method before each test method
	public void init() {   // pre condition method
		System.out.println("Start Db connection");
		 obj = new JavaOperations();
		 System.out.println("Initalization done..");
	}
	
	
	@AfterEach // execute teardown() method after each test method
	public void teardown()  // post condition method
	{
		System.out.println("close DB connection");
	}
	
	@Test
	public void test1()
	{
		// create an object of a class and then execute the code
		System.out.println("Execute the test case using methods of ... JavaOperations");
		
	}
	
	@Test
	public void test2()
	{
		// create an object of a class and then execute the code
		System.out.println("Execute the test case using methods of ... JavaOperations");
		
	}

}
