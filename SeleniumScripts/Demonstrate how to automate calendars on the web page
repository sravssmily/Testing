Types Of Calendar Controls
A calendar control (date picker control) allows the user to select a date easily. Usually, it appears as an input field in an HTML form. Since the date selected by the user might be needed later, it is important to maintain the format. This is also why HTML forms are more widely used than entering date in a text-box.

There are two popular types of Calendar controls you’d need to automate calendar using Selenium WebDriver:

jQuery Calendar – The jQuery calendar is a part of the open-source project at JS Foundation (previously called jQuery Foundation). There are a number of other elements like user interface interactions, widgets, effects, etc. that are also built on top of jQuery JavaScript Library.
Kendo Calendar – Kendo Calendar is developed by Telerik.com. It is not an open-source project. Using Kendo UI, developers can build JavaScript apps faster. More details about Kendo UI are available here.
Kendo and jQuery Calendars work on all major web browsers. But there are a few exceptions- Kendo on IE works on IE7 (and above) whereas jQuery works on IE8 (and above). Both these controls are responsive and have mobile browser compatibility
FileName – 1_Selenium_Calendar_iFrame_Test.py
#Selenium testing tutorial to automate calendar using Selenium WebDriver inside an iFrame.
import unittest
import time
from selenium import webdriver
from selenium.webdriver.support.select import Select
 
# The Date Range picker is from https://jqueryui.com/datepicker/#date-range
 
expected_from_date_str = '01/20/2020'
expected_to_date_str = '02/26/2020'
 
expected_fr_date = '20'
expected_to_date = '26'
 
test_url = 'https://jqueryui.com/datepicker/#date-range'
 
class CalendarControlTest(unittest.TestCase):
 
    def setUp(self):
        self.driver = webdriver.Chrome()
        self.driver.maximize_window()

    def test_calendar_control_range_(self):
        driver = self.driver
        driver.get(test_url)
        time.sleep(5)
 
        frame = driver.find_element_by_xpath("//*[@id='content']/iframe")
        driver.switch_to.frame(frame)
 
        ################################# Steps for the From Date ############################
        from_dp = driver.find_element_by_xpath("//input[@id='from']")
        from_dp.click()
        time.sleep(5)
        
        from_month = driver.find_element_by_xpath("//div/select[@class='ui-datepicker-month']")
        selected_from_month = Select(from_month)
        selected_from_month.select_by_visible_text("Jan")
        time.sleep(5)
        
        # from_day = driver.find_element_by_xpath("//table/tbody/tr/td/a[text()='20']")
        from_day = driver.find_element_by_xpath("//td[not(contains(@class,'ui-datepicker-month'))]/a[text()='" + expected_fr_date + "']")
        from_day.click()
time.sleep(10)
 
        ################################# Steps for the To Date ############################
        # The same steps like the ones in From Month are repeated except that now the operations
        # are performed on a different web element.
 
        to_dp = driver.find_element_by_xpath("//input[@id='to']")
        to_dp.click()
        time.sleep(5)
 
        to_month = driver.find_element_by_xpath("//div/select[@class='ui-datepicker-month']")
        selected_to_month=Select(to_month)
        selected_to_month.select_by_visible_text("Feb")
        time.sleep(5)
        
        # day_to=driver.find_element_by_xpath("//table/tbody/tr/td/a[text()='26']")
        to_day = driver.find_element_by_xpath("//td[not(contains(@class,'ui-datepicker-month'))]/a[text()='" + expected_to_date + "']")
        to_day.click()
        time.sleep(10)
  selected_from_date_str = from_dp.get_attribute('value')
        self.assertEqual(selected_from_date_str, expected_from_date_str)
        
        selected_to_date_str = to_dp.get_attribute('value')
        self.assertEqual(selected_to_date_str, expected_to_date_str)
        
        print("Unit Test of jQuery Calendar passed")
 
    def tearDown(self):
        self.driver.close()
        self.driver.quit()
 
if __name__ == "__main__":
    unittest.main()
view rawSelenium_Calendar_iFrame_Test.py
